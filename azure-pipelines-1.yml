trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'

- script: |
    python -m pip install --upgrade pip
    python -m pip install selenium==4.12.0
    python -m pip install pytest
    python -m pip install pytest-html
    python -m pip install pytest-xdist
    python -m pip install pytest-nunit
    python -m pip install pytest-cov
    python -m pip install -r requirements.txt
  displayName: 'Install dependencies and plugins'

- script: |
    python -m pip list
  displayName: 'Check installed Python packages'

# ðŸš€ Run Unit Tests with Coverage
- script: |
    pytest tests/test_unit.py -rA \
      --html=reports/UnitTestReport.html --self-contained-html \
      --nunitxml=nunit/unit-test-results.xml -n 2 \
      --cov=your_flask_app_folder --cov-report=html:coverage_report
  displayName: 'Run Unit Tests with Coverage and Generate Reports'

- script: |
    pytest -rA --html=reports/Report.html --self-contained-html --doctest-modules --nunitxml=nunit/test-results.xml -n 5
  displayName: 'Run Selenium Tests and Generate Reports'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'NUnit'
    testResultsFiles: |
      nunit/unit-test-results.xml
      nunit/test-results.xml
    failTaskOnFailedTests: true
    testRunTitle: 'Publish All Test Results'
  displayName: 'Publish NUnit Test Results'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'reports'
    ArtifactName: 'TestReports'
    publishLocation: 'Container'
  displayName: 'Publish Pytest HTML Reports'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'coverage_report'
    ArtifactName: 'CoverageReport'
    publishLocation: 'Container'
  displayName: 'Publish Coverage HTML Report'
